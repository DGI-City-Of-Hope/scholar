<?php

/**
 * @file
 *
 * Implements hooks and callbacks for this module.
 */

function citeproc_item_from_mods(DOMDocument $mods, $cache_id = NULL) {
  module_load_include('inc', 'citeproc', 'CiteProcJSItem');
  module_load_include('php', 'citeproc', 'generators/converter');

  
  $raw = '';
  if (!is_null($cache_id)) {
    //dd(t('Trying to use cached version stupidly...: !id', array('!id' => $cache_id)));
    $raw = cache_get($cache_id);
  }
  
  if (empty($raw)) {
    $raw = convert_mods_to_citeproc_jsons($mods->saveXML());
    if (!is_null($cache_id)) {
      //dd(t('Setting cache: !id', array('!id' => $cache_id)));
      //Cache for 12 hours...  Might be better to have them be permanent, and have the form submit clear them?
      cache_set($cache_id, $raw, 'cache', time() + (3600 * 1000 * 12));
    }
  }

  $item = new CiteProcJSItem();
  $item->set($raw);
  return $item;
}

function citeproc_citation_from_mods(DOMDocument $mods, $cache_id = NULL) {
  module_load_include('inc', 'citeproc', 'CiteProcJSCitation');
  $item = citeproc_item_from_mods($mods, $cache_id);
  $citation = new CiteProcJSCitation();
  $citation->addItem($item);
  return $citation;
}

function citeproc_bibliography_from_mods(CiteProcJSStyle $style, DOMDocument $mods, $cache_id = NULL) {
  module_load_include('inc', 'citeproc', 'CiteProcJSBibliography');
  $citation = citeproc_citation_from_mods($mods, $cache_id);
  $bibliography = new CiteProcJSBibliography($style);
  $bibliography->addCitation($citation);
  return $bibliography;
}

function citeproc_bibliography_from_raw_array(CiteProcJSStyle $style, array $raw) {
  module_load_include('inc', 'citeproc', 'CiteProcJSItem');
  module_load_include('inc', 'citeproc', 'CiteProcJSCitation');
  module_load_include('inc', 'citeproc', 'CiteProcJSBibliography');
  
  $item = new CiteProcJSItem();
  $item->set($raw);
  $citation = new CiteProcJSCitation();
  $citation->addItem($item);
  $bibliography = new CiteProcJSBibliography($style);
  $bibliography->addCitation($citation);
  return $bibliography;
}

function citeproc_style($style) {
  module_load_include('inc', 'csl', 'CSL');
  module_load_include('inc', 'citeproc', 'CiteProcJSStyle');
  $doc = CSL::Get($style);
  if($doc) {
    return new CiteProcJSStyle($doc);
  }
  return FALSE;
}