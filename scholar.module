<?php

/**
 * @file
 *
 * Implements hooks and callbacks for this module.
 */
/**
 * Constants
 */
define('MENU_SCHOLAR_HOME', 'ir');
define('THEME_SCHOLAR_HOME', 'scholar_home');
define('THEME_SCHOLAR_SEARCH_ITEM', 'scholar_search_item');
define('THEME_SCHOLAR_SEARCH_TABLE', 'scholar_search_results_table');
define('THEME_SCHOLOR_OVERVIEW_PANEL_CITATION', 'scholar_overview_panel_citation');

/**
 * Implements hook_menu().
 */
function scholar_menu() {
  $items = array();
  $items[MENU_SCHOLAR_HOME] = array(
    'title' => 'Search Publications',
    'file' => 'pages/Home.inc',
    'page callback' => 'scholar_home',
    'access callback' => 'user_access',
    'access arguments' => array('access content'),
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

/**
 * Implements hook_theme().
 */
function scholar_theme() {
  return array(
    THEME_SCHOLAR_HOME => array(
      'template' => 'templates/Home',
      'file' => 'pages/Home.inc',
    ),
    THEME_SCHOLAR_SEARCH_ITEM => array(
      'template' => 'templates/SearchItem',
      'file' => 'IslandoraSolrResultsCitation.inc',
      'arguments' => array('pid' => NULL, 'style' => NULL)
    ),
    THEME_SCHOLAR_SEARCH_TABLE => array(
      'file' => 'IslandoraSolrResultsCitation.inc',
      'arguments' => array('element' => NULL)
    ),
    THEME_SCHOLOR_OVERVIEW_PANEL_CITATION => array(
      'template' => 'templates/CitationModel',
      'file' => 'CitationModel.inc',
      'arguments' => array('pid' => NULL)
    )
  );
}

/**
 * Implements hook_register_content_models_for_viewer().
 */
function scholar_register_content_models_for_viewer() {
  $models = array();
  $models['ir:citationCModel'] = array(
    'type' => 'inc',
    'module' => 'scholar',
    'file' => 'CitationModel',
    'class' => 'CitationModel'
  );
  $models['ir:authorityCModel'] = array(
    'type' => 'inc',
    'module' => 'content_model_viewer',
    'file' => 'models/Default',
    'class' => 'DefaultModelViewer'
  );
  $models['ir:citationCollectionCModel'] = array(
    'type' => 'inc',
    'module' => 'content_model_viewer',
    'file' => 'models/Default',
    'class' => 'DefaultModelViewer'
  );
  $models['ir:authorityCollectionCModel'] = array(
    'type' => 'inc',
    'module' => 'content_model_viewer',
    'file' => 'models/Default',
    'class' => 'DefaultModelViewer'
  );
  $models['islandora:collectionCModel'] = array(
    'type' => 'inc',
    'module' => 'content_model_viewer',
    'file' => 'models/Default',
    'class' => 'DefaultModelViewer'
  );
  return $models;
}

/**
 * Implements hook_islandora_solr_primary_display().
 */
function scholar_islandora_solr_primary_display() {
  return array(
    'scholar' => array(
      'name' => t('Citations'),
      'module' => 'scholar',
      'file' => 'IslandoraSolrResultsCitation.inc',
      'class' => "IslandoraSolrResultsCitation",
      'function' => "displayResults",
      'description' => t("A results are rendered as APA style citations."),
    )
  );
}

/**
 * Implements hook_form_alter().
 * 
 * Alters the content_model_viewer_ingest_metadata_form to make it more user friendly in the context of 
 * the presence of the build ingest form.
 * 
 * @param array $form
 *   The Drupal form.
 * @param array $form_state 
 *   The Drupal form state.
 */
function scholar_form_content_model_viewer_ingest_metadata_form_alter(array &$form, array &$form_state) {
  if ($form_state['storage']['step'] == 1 && isset($form['indicator'])) {
    $models = array('ir:citationCModel/ISLANDORACM');
    $show_bulk_ingest = FALSE;
    foreach ($form['indicator']['models']['#options'] as $model => $label) {
      if (array_search($model, $models) !== FALSE) {
        $show_bulk_ingest = TRUE;
      }
    }
    if ($show_bulk_ingest) {
      module_load_include('inc', 'scholar', 'Batch');
      $bulk_ingest = scholar_bulk_ingest_form($form_state, $form['collection_pid']['#value']);
      // Move the next button within the field set to make it clearer.
      $form['indicator']['submit'] = $form['submit'];
      unset($form['submit']);
      array_unshift($form, $bulk_ingest);
      $form['#attributes'] = array('enctype' => 'multipart/form-data'); // Allow the uploading of files.
      $form['#validate'] = array('scholar_bulk_ingest_form_validate');
    }
  }
}

/**
 * Implements hook_form_alter().
 * 
 * Alters the content_model_viewer_edit_metadata_form so that the Citation is Rendered at the top of the page.
 * 
 * @param array $form
 *   The Drupal form.
 * @param array $form_state 
 *   The Drupal form state.
 */
function scholar_form_content_model_viewer_edit_metadata_form_alter(array &$form, array &$form_state) {
  if ($form_state['storage']['step'] == 2) {
    $pid = $form['pid']['#value'];
    $item = new Fedora_Item($pid);
    if ($item->exists() && isset($item->datastreams['MODS'])) {
      $mods = $item->get_datastream_dissemination('MODS');
      $mods = trim($mods);
      if (!empty($mods)) {
        $doc = new DOMDocument();
        $doc->loadXML($mods);
        module_load_include('inc', 'csl', 'CSL');
        $names = CSL::GetNames();
        $style = citeproc_style('APA');
        $bibliography = citeproc_bibliography_from_mods($style, $doc);
      }
    }
    $title = array(
      '#type' => 'markup',
      '#prefix' => '<h3>',
      '#value' => check_plain($form_state['values']['forms']),
      '#suffix' => '</h3>'
    );
    $citation = array('#value' => $bibliography->render());
    array_unshift($form, $citation);
    array_unshift($form, $title);
    $form['#attributes'] = array('enctype' => 'multipart/form-data'); // Allow the uploading of files.
  }
}