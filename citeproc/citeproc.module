<?php

/**
 * @file
 *
 * Implements hooks and callbacks for this module.
 */

/**
 * Tempory Menu for rendering some test junk.
 */
function citeproc_menu() {
  $items = array();
  $items['test/citations'] = array(
    'title' => 'Citations Test',
    'description' => 'Test Citations Functionality',
    'page callback' => 'citations_test',
    'access arguments' => array('access content'),
    'type' => MENU_NORMAL_ITEM
  );
  return $items;
}

/**
 * test function to be removed.
 */
function citations_test() {
  module_load_include('inc', 'citeproc', 'CiteProcBibliography');
  $filename = drupal_get_path('module', 'citeproc') . '/data/apa.csl';
  $doc = new DOMDocument();
  $doc->load($filename);
  $style = new CiteProcStyle($doc);
  $item = new CiteProcItem();
  $item->setVariable('title', 'Boundaries of Dissent: Protest and State Power in the Media Age');
  $item->addName('author', array(
    'family' => 'D\'Arcus',
    'given' => 'Bruce',
    'static-ordering' => false
  ));
  $item->setVariable('note', 'The apostrophe in Bruce\'s name appears in proper typeset form.');
  $item->setVariable('publisher', 'Routledge');
  $item->setVariable('publisher-place', 'New York');
  $item->setDate('issued', array(
    'date-parts' => array(2006)
  ));
  $item->setVariable('type', 'book');
  $citation = new CiteProcCitation();
  $citation->addItem($item);
  $style = new CiteProcStyle($doc);
  $item = new CiteProcItem();
  $item->setVariable('title', 'Boundaries of Dissent: Protest and State Power in the Media Age');
  $item->addName('author', array(
    'family' => 'D\'Arcus',
    'given' => 'Bruce',
    'static-ordering' => false
  ));
  $item->setVariable('note', 'The apostrophe in Bruce\'s name appears in proper typeset form.');
  $item->setVariable('publisher', 'Routledge');
  $item->setVariable('publisher-place', 'New York');
  $item->setDate('issued', array(
    'date-parts' => array(2006)
  ));
  $item->setVariable('type', 'book');
  $citation->addItem($item);
  $bibliography = new CiteProcBibliography();
  $bibliography->addCitation($citation);
  $pre = $citation->render($style);
  return $pre . '<br/>' . $bibliography->render($style); // Gets html for the bibliography
}

function citeproc_item_from_mods(DOMDocument $mods) {
  module_load_include('inc', 'citeproc', 'CiteProcItem');
  module_load_include('php', 'citeproc', 'generators/converter');
  $item = new CiteProcItem();
  $raw = convert_mods_to_citeproc_jsons($mods->saveXML());
  $item->set($raw);
  return $item;
}

function citeproc_citation_from_mods(DOMDocument $mods) {
  module_load_include('inc', 'citeproc', 'CiteProcCitation');
  $item = citeproc_item_from_mods($mods);
  $citation = new CiteProcCitation();
  $citation->addItem($item);
  return $citation;
}

function citeproc_bibliography_from_mods(DOMDocument $mods) {
  module_load_include('inc', 'citeproc', 'CiteProcBibliography');
  $citation = citeproc_citation_from_mods($mods);
  $bibliography = new CiteProcBibliography();
  $bibliography->addCitation($citation);
  return $bibliography;
}

function citeproc_style($filename) {
  module_load_include('inc', 'citeproc', 'CiteProcStyle');
  $doc = new DOMDocument();
  $doc->load($filename);
  return new CiteProcStyle($doc);
}